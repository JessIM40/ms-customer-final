openapi: 3.0.3
info:
  title: Customer Management Service
  description: Microservice for customer management at XYZ bank
  version: 1.0.0
servers:
  - url: http://localhost:8086
paths:
  /customers:
    post:
      tags:
        - customers
      summary: Create a new customer to the banking system
      description: Create a new customer in the banking system
      operationId: createCustomer
      requestBody:
        description: Created customer object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomersRequest'
        required: true
      responses:
        '201':
          description: Client created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersResponse'
        '400':
          description: Error in input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                duplicateDni:
                  summary: Duplicate DNI
                  value:
                    code: 400
                    message: 'El DNI ya est치 registrado en el sistema'
                invalidEmailFormat:
                  summary: Invalid email format
                  value:
                    code: 400
                    message: 'El formato del email no es v치lido'
                missingFields:
                  summary: Missing required fields
                  value:
                    code: 400
                    message: 'Los campos obligatorios est치n incompletos'
    get:
      tags:
        - customers
      summary: Get list of all customers
      description: Returns a list of all registered customers
      operationId: customersList
      responses:
        '200':
          description: List of successfully retrieved customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomersResponse'
        '500':
          description: Error getting customers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /customers/{id}:
    get:
      tags:
        - customers
      summary: Get details of a customer by their ID.
      description: ''
      operationId: getCustomersByDni
      parameters:
        - name: id
          in: path
          description: 'Unique customer identifier'
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Customer information successfully obtained
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersResponse'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - customers
      summary: Update a customer
      description: ''
      operationId: updateCustomer
      parameters:
        - name: id
          in: path
          description: Customer that needs to be updated
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Update an existing customer in the system
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomersRequest'
      responses:
        '200':
          description: Client updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersResponse'
        '400':
          description: Error in input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                duplicateDni:
                  summary: Duplicate DNI
                  value:
                    code: 400
                    message: 'El DNI ya esta registrado en el sistema'
                invalidEmailFormat:
                  summary: Invalid email format
                  value:
                    code: 400
                    message: 'El formato del email no es valido'
                missingFields:
                  summary: Missing required fields
                  value:
                    code: 400
                    message: 'Los campos oblicatorios estan incompletos'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - customers
      summary: Delete customer
      description: ''
      operationId: deleteCustomer
      parameters:
        - name: id
          in: path
          description: The customer that needs to be deleted
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Client deleted successfully
        '400':
          description: Cannot delete client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                activeAccounts:
                  summary: Client has active accounts
                  value:
                    code: 400
                    message: 'El cliente no puede eliminarse porque tiene cuentas activas'
                invalidId:
                  summary: Invalid ID
                  value:
                    code: 400
                    message: 'El ID proporcionado no es v치lido'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    CustomersRequest:
      type: object
      required:
        - firstname
        - lastname
        - dni
        - email
      properties:
        firstname:
          type: string
          example: 'Jess'
        lastname:
          type: string
          example: 'Torres'
        dni:
          type: string
          example: '01928374'
          description: The user's DNI must be unique
        email:
          type: string
          format: email
          example: 'jtorres@email.com'
    CustomersResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: '123e4567-e89b-12d3-a456-426614174000'
        firstname:
          type: string
          example: 'Jess'
        lastname:
          type: string
          example: 'Torres'
        dni:
          type: string
          example: '01928374'
          description: The user's DNI must be unique
        email:
          type: string
          format: email
          example: 'jtorres@email.com'
    Error:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: 'Validation failed'